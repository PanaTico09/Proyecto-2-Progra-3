package ui;

import da.Cola;
import da.DatosAlgoritmos;
import da.Lista;
import da.Pila;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.Calendar;
import servicios.Conexion;
import servicios.Datos_Servicios;

/**
 *
 * @author Johan Herrera
 */
public class VentanaAlgoritmos extends javax.swing.JFrame {

    private final Datos_Servicios datos_servicio = new Datos_Servicios();
    private DatosAlgoritmos datos;

    /**
     * Creates new form VentanaAlgoritmos
     */
    public VentanaAlgoritmos() {
        initComponents();
        this.datos = new DatosAlgoritmos();
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    public VentanaAlgoritmos(DatosAlgoritmos a_datos) {
        this.datos = a_datos;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonMergeSortSimple = new javax.swing.JButton();
        BotonMergeSortCircular = new javax.swing.JButton();
        BotonHeapSortPila = new javax.swing.JButton();
        BotonInsertionSortCola = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BotonBrickSortSimple = new javax.swing.JButton();
        botonConsultar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        botonSalir = new javax.swing.JButton();
        botonMovimientoNodos = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonMergeSortSimple.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        BotonMergeSortSimple.setText("MergeSort Simple");
        BotonMergeSortSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMergeSortSimpleActionPerformed(evt);
            }
        });
        getContentPane().add(BotonMergeSortSimple, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 191, 173, -1));

        BotonMergeSortCircular.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        BotonMergeSortCircular.setText("MergeSort Circular");
        BotonMergeSortCircular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMergeSortCircularActionPerformed(evt);
            }
        });
        getContentPane().add(BotonMergeSortCircular, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 263, -1, -1));

        BotonHeapSortPila.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        BotonHeapSortPila.setText("HeapSort Pila");
        BotonHeapSortPila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonHeapSortPilaActionPerformed(evt);
            }
        });
        getContentPane().add(BotonHeapSortPila, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 335, 173, -1));

        BotonInsertionSortCola.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        BotonInsertionSortCola.setText("InsertionSort Cola");
        BotonInsertionSortCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInsertionSortColaActionPerformed(evt);
            }
        });
        getContentPane().add(BotonInsertionSortCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 407, 173, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Algoritmos de Ordenamiento");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, -1, -1));

        BotonBrickSortSimple.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        BotonBrickSortSimple.setText("BrickSort Simple");
        BotonBrickSortSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBrickSortSimpleActionPerformed(evt);
            }
        });
        getContentPane().add(BotonBrickSortSimple, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 479, 173, -1));

        botonConsultar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        botonConsultar.setText("Consultar Datos ");
        botonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(botonConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 612, 173, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Consultar Historial:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 552, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione el Algoritmo que desea ejecutar:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 131, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/imagenes/My Code works.gif"))); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(690, 295));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 650, 430));

        botonSalir.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 757, 173, -1));

        botonMovimientoNodos.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        botonMovimientoNodos.setText("Movimiento Nodos");
        botonMovimientoNodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMovimientoNodosActionPerformed(evt);
            }
        });
        getContentPane().add(botonMovimientoNodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 684, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/imagenes/Pana Logo ChillTime_opt.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1780, 850, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/imagenes/fondoPrincipal.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1920, 1100));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    java.sql.Date fecha = new java.sql.Date(Calendar.getInstance().getTime().getTime());

    private void guardar() {
        try {
            this.datos_servicio.guardar(Conexion.obtener(), datos);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se ha podido guardar el registro.");
        } catch (ClassNotFoundException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se ha podido guardar el registro.");
        }
    }

    private void BotonMergeSortSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMergeSortSimpleActionPerformed
        double tiempoInicioLS = System.nanoTime();
        Lista ls = new Lista();
        ls.add("Nitzia", "Chi", "Yaslin", "7-0126-0769", 39.4); //Añade a la Lista
        ls.add("Johan", "Herrera", "Araya", "1-1711-0507", 19.1);
        ls.add("Mariana", "Castilla", "Arias", "M123785", 20.9);
        ls.add("Gimenha", "Sanchez", "Chi", "7-2750-0404", 17.5);
        ls.add("Daniela", "Zepeda", "Ramirez", "P985321", 20.9);
        ls.add("Karla", "Araya", "Chaves", "1-0929-0463", 41.5);
        ls.add("Rogel", "Herrera", "Bellido", "8-0083-0592", 45.5);
        ls.add("Angel", "Barrantes", "Chaves", "e770089", 18.7);
        ls.mergeSort(ls.getCabeza());
        ls.pasaportePrimero();
        double tiempoTotalLS = System.nanoTime() - tiempoInicioLS;
        datos = new DatosAlgoritmos(null, "MergeSort Simple", "Lista Simple", fecha, tiempoTotalLS/1000000);
        guardar();
        JOptionPane.showMessageDialog(this, "Se ejecuto el MergeSort Simple.");
    }//GEN-LAST:event_BotonMergeSortSimpleActionPerformed

    private void BotonMergeSortCircularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMergeSortCircularActionPerformed
        double tiempoInicioLC = System.nanoTime(); 
        Lista lc = new Lista();
        lc.addCircular("Nitzia", "Chi", "Yaslin", "7-0126-0769", 39.4); //Añade a la Lista Circular
        lc.addCircular("Johan", "Herrera", "Araya", "1-1711-0507", 19.1);
        lc.addCircular("Mariana", "Castilla", "Arias", "M123785", 20.9);
        lc.addCircular("Gimenha", "Sanchez", "Chi", "7-2750-0404", 17.5);
        lc.addCircular("Daniela", "Zepeda", "Ramirez", "P985321", 20.9);
        lc.addCircular("Karla", "Araya", "Chaves", "1-0929-0463", 41.5);
        lc.addCircular("Rogel", "Herrera", "Bellido", "8-0083-0592", 45.5);
        lc.addCircular("Angel", "Barrantes", "Chaves", "e770089", 18.7);
        lc.mergeSortC(lc.getCabeza());
        double tiempoTotalLC = System.nanoTime() - tiempoInicioLC; 
        datos = new DatosAlgoritmos(null, "MergeSort Circular", "Lista Circular", fecha, tiempoTotalLC/1000000);
        guardar();        
        JOptionPane.showMessageDialog(this, "Se ejecuto el MergeSort Circular.");
    }//GEN-LAST:event_BotonMergeSortCircularActionPerformed

    private void BotonHeapSortPilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonHeapSortPilaActionPerformed
        double tiempoInicioHS = System.nanoTime();
        Pila p = new Pila();
        p.push("Nitzia", "Chi", "Yaslin", "7-0126-0769", 39.4); //Añade a la Pila
        p.push("Johan", "Herrera", "Araya", "1-1711-0507", 19.1);
        p.push("Mariana", "Castilla", "Arias", "M123785", 20.9);
        p.push("Gimenha", "Sanchez", "Chi", "7-2750-0404", 17.5);
        p.push("Daniela", "Zepeda", "Ramirez", "P985321", 20.9);
        p.push("Karla", "Araya", "Chaves", "1-0929-0463", 41.5);
        p.push("Rogel", "Herrera", "Bellido", "8-0083-0592", 45.5);
        p.push("Angel", "Barrantes", "Chaves", "e770089", 18.7);
        p.heapSort(p);
        double tiempoTotalHS = System.nanoTime() - tiempoInicioHS;
        datos = new DatosAlgoritmos(null, "HeapSort", "Pila", fecha, tiempoTotalHS/1000000);
        guardar();
        JOptionPane.showMessageDialog(this, "Se ejecuto el HeapSort.");
    }//GEN-LAST:event_BotonHeapSortPilaActionPerformed

    private void BotonInsertionSortColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInsertionSortColaActionPerformed
        double tiempoInicioIS = System.nanoTime();
        Cola c = new Cola();
        c.queue("Nitzia", "Chi", "Yaslin", "7-0126-0769", 39.4);   //Añade a la Cola
        c.queue("Johan", "Herrera", "Araya", "1-1711-0507", 19.1);
        c.queue("Mariana", "Castilla", "Arias", "M123785", 20.9);
        c.queue("Gimenha", "Sanchez", "Chi", "7-2750-0404", 17.5);
        c.queue("Daniela", "Zepeda", "Ramirez", "P557905", 20.9);
        c.queue("Karla", "Araya", "Chaves", "1-0929-0463", 41.5);
        c.queue("Rogel", "Herrera", "Bellido", "8-0083-0592", 41.5);
        c.queue("Angel", "Barrantes", "Chaves", "e770089", 18.7);
        c.insertionSort();
        double tiempoTotalIS = System.nanoTime() - tiempoInicioIS;
        datos = new DatosAlgoritmos(null, "InsertionSort", "Cola", fecha, tiempoTotalIS/1000000);
        guardar();
        JOptionPane.showMessageDialog(this, "Se ejecuto el InsertionSort.");
    }//GEN-LAST:event_BotonInsertionSortColaActionPerformed

    private void BotonBrickSortSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBrickSortSimpleActionPerformed
        double tiempoInicioBS = System.nanoTime();
        Lista bs = new Lista();
        bs.add("Nitzia", "Chi", "Yaslin", "7-0126-0769", 39.4); //Añade a la Lista
        bs.add("Johan", "Herrera", "Araya", "1-1711-0507", 19.1);
        bs.add("Mariana", "Castilla", "Arias", "M123785", 20.9);
        bs.add("Gimenha", "Sanchez", "Chi", "7-2750-0404", 17.5);
        bs.add("Daniela", "Zepeda", "Ramirez", "P985321", 20.9);
        bs.add("Karla", "Araya", "Chaves", "1-0929-0463", 41.5);
        bs.add("Rogel", "Herrera", "Bellido", "8-0083-0592", 45.5);
        bs.add("Angel", "Barrantes", "Chaves", "e770089", 18.7);
        bs.brickSort(bs);
        double tiempoTotalBS = System.nanoTime() - tiempoInicioBS;
        datos = new DatosAlgoritmos(null, "BrickSort Simple", "Lista Simple", fecha, tiempoTotalBS/1000000);
        guardar();
        JOptionPane.showMessageDialog(this, "Se ejecuto el BrickSort Simple.");
    }//GEN-LAST:event_BotonBrickSortSimpleActionPerformed

    private void botonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarActionPerformed
        VentanaConsultar vCons = new VentanaConsultar();
        vCons.setVisible(true);
    }//GEN-LAST:event_botonConsultarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonMovimientoNodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMovimientoNodosActionPerformed
        MovimientoNodos venNodos = new MovimientoNodos();
        venNodos.setVisible(true);
    }//GEN-LAST:event_botonMovimientoNodosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAlgoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAlgoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAlgoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAlgoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VentanaAlgoritmos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBrickSortSimple;
    private javax.swing.JButton BotonHeapSortPila;
    private javax.swing.JButton BotonInsertionSortCola;
    private javax.swing.JButton BotonMergeSortCircular;
    private javax.swing.JButton BotonMergeSortSimple;
    private javax.swing.JButton botonConsultar;
    private javax.swing.JButton botonMovimientoNodos;
    private javax.swing.JButton botonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
